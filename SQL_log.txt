SELECT * INTO OUTFILE '/var/www/out.csv'
FIELDS TERMINATED BY ',' FROM tb1;

LOAD DATA INFILE '/var/www/t.csv' INTO TABLE tb1N
FIELDS TERMINATED BY ',';

CREATE TABLE tran (a INT);

SET AUTOCOMMIT = 1;

SET AUTOCOMMIT = 0;

ROLLBACK;

START TRANSACTION;

ALTER TABLE tb1A ENGINE = MyISAM;

CREATE FUNCTION f_uria(t INT) RETURNS INT
BEGIN
DECLARE u INT;
SELECT SUM(uria) INTO u FROM tb WHERE tuki = t;
RETURN u;
END
//

CREATE FUNCTION f_uria(t INT) RETURNS DOUBLE
BEGIN
DECLARE a DOUBLE;
SELECT AVG(uria) INTO a FROM tb WHERE tuki = t;
RETURN a;
END
//

DROP TRIGGER tr1;

SHOW TRIGGERS;

CREATE TRIGGER tr1 BEFORE DELETE ON tb1 FOR EACH ROW
BEGIN
INSERT INTO tb1M VALUES(OLD.bang, OLD.nama, OLD.tosi);
END
//

CREATE FUNCTION fu2() RETURNS DOUBLE
BEGIN
DECLARE r DOUBLE;
SELECT AVG(uria) INTO r FROM tb;
RETURN r;
END
//

SELECT fu1(163);

CREATE FUNCTION fu1(sintyo INT) RETURNS DOUBLE
BEGIN
RETURN sintyo * sintyo * 22 / 10000;
END
//

DROP PROCEDURE prl;

SHOW CREATE PROCEDURE pr2;

CALL pr2(100);

CREATE PROCEDURE pr2(d INT)
BEGIN
SELECT * FROM tb WHERE uria >= d;
END
//

CALL prl;

DELIMITER //
CREATE PROCEDURE prl()
BEGIN
SELECT * FROM tb;
SELECT * FROM tb1;
END
//
DELIMITER ;

CREATE VIEW v_uria AS
SELECT bang, AVG(uria) AS avg FROM tb
WHERE uria >= 50 GROUP BY bang HAVING(avg >= 120) ORDER BY avg DESC;

SELECT bang, AVG(uria) as avg FROM tb
WHERE uria >= 50 GROUP BY bang HAVING(avg >= 120) ORDER BY avg DESC;

SELECT bang, AVG(uria) FROM tb 
WHERE uria >= 50 GROUP BY bang ORDER BY AVG(uria) DESC;

DROP VIEW IF EXISTS v1;

ALTER VIEW v1 AS SELECT nama,tosi FROM tb1;

CREATE OR REPLACE VIEW v1 AS SELECT NOW();

CREATE VIEW v4 AS SELECT bang,uria FROM tb WHERE uria>100 WITH CHECK OPTION;

INSERT INTO v3 VALUES('意地悪',50);

CREATE VIEW v3 AS SELECT bang,uria FROM tb WHERE uria>=100;

INSERT INTO v1 VALUES('アルバイト・石田',18);

UPDATE tb SET uria=777 WHERE uria=54;

CREATE VIEW v2 AS
SELECT tb.bang,tb1L.nama,tb.uria FROM tb
JOIN tb1L USING(bang) WHERE tb.uria>=100;

UPDATE v1 SET nama='主任・佐藤' WHERE nama='佐藤';

CREATE VIEW v1 AS SELECT nama, tosi FROM tb1L;

SELECT * FROM tb WHERE EXISTS(SELECT * FROM tb1 WHERE tb.bang=tb1.bang);

SELECT a.bang, a.uria, COUNT(*) AS 順位 
    FROM tb AS a 
JOIN tb AS b
    WHERE a.uria <= b.uria 
GROUP BY a.uria
    ORDER BY 順位 ASC;

INSERT INTO tb_zyun
    (bang, uria, tuki)
(SELECT
    bang, uria, tuki
FROM tb
    ORDER BY uria DESC);

ALTER TABLE tb_zyun ADD zyun INT AUTO_INCREMENT PRIMARY KEY;

CREATE TABLE tb_zyun LIKE tb;

SELECT * FROM tb1 WHERE NOT EXISTS (SELECT * FROM tb WHERE tb.bang=tb1.bang);

SELECT * FROM tb1 WHERE EXISTS (SELECT * FROM tb WHERE tb.bang=tb1.bang);

SELECT * FROM tb1 WHERE bang IN (SELECT bang FROM tb WHERE uria >= 200);

SELECT * FROM tb1 WHERE tosi >= (SELECT AVG(tosi) FROM tb1);

SELECT * FROM tb WHERE uria IN (SELECT MAX(uria) FROM tb);

SELECT a.nama, a.tosi, COUNT(*) FROM tb1 AS a JOIN tb1 AS b
WHERE a.tosi <= b.tosi GROUP BY a.bang;

SELECT * FROM tb1 AS a JOIN tb1 AS b;

SELECT tb.bang, tb1.mana FROM tb RIGHT JOIN tb1 USING(bang);

SELECT tb.bang, tb1.nama FROM tb LEFT JOIN tb1 USING(bang);

SELECT x.bang, y.nama, x.uria FROM tb as x JOIN tb1 as y ON x.bang = y.bang;

SELECT tb.bang, tb.uria, tb1.nama, tb3.ken FROM tb 
JOIN tb1 USING(bang) JOIN tb3 USING(bang);

SELECT tb.bang AS 社員番号, tb1.nama AS 氏名, tb.uria AS 売上 FROM tb
JOIN tb1 USING(bang) WHERE tb.uria >= 100;

SELECT tb.bang, tb1.nama, tb.uria FROM tb JOIN tb1 USING(bang);

SELECT x.bang, y.nama, x.uria FROM tb as X JOIN  tb1 as y ON x.bang = y.bang;

SELECT tb.bang, tb1.nama, tb.uria FROM tb JOIN tb1 ON tb.bang = tb1.bang;

SELECT * FROM tb INNER JOIN tb1 ON tb.bang = tb1.bang;

SELECT * FROM tb JOIN tb1 ON tb.bang = tb1.bang;

(SELECT bang FROM tb WHERE uria >= 200)
UNION ALL
(SELECT bang FROm tb1 WHERE tosi >= 35);

(SELECT bang FROM tb WHERE uria >= 200)
UNION
(SELECT bang FROm tb1 WHERE tosi >= 35);

SELECT * FROM tb WHERE bang IN('A102', 'A103');

SELECT * FROM tb WHERE bang NOT IN('A101');

(SELECT * FROM tb1) UNION (SELECT * FROM tb2);

INSERT INTO tb3(bang, ken) VALUES ('','');

INSERT INTO tb2 (bang, nama, tosi) VALUES ('','',);

CREATE TABLE tb3(
bang VARCHAR(10),
ken VARCHAR(10)
);

CREATE TABLE tb2(
bang VARCHAR(10),
nama VARCHAR(10),
tosi INT
);

CREATE TABLE new_zaiko SELECT * FROM zaiko WHERE c > (NOW() - INTERVAL 5 YEAR);

DELETE FROM tb_copy ORDER BY uria DESC LIMIT 4;

DELETE FROM tb1K WHERE tosi < 30;

CREATE TABLE tb_2to5 SELECT * FROM tb ORDER BY uria DESC LIMIT 4 OFFSET 1;

CREATE TABLE tb_A101 SELECT * FROM tb WHERE bang LIKE 'A101';

ALTER TABLE tb DROP bikou;

UPDATE tb SET bikou = 'ガンバレ' ORDER BY uria ASC LIMIT 3;

UPDATE tb SET bikou = '優秀' WHERE uria >= 100;

UPDATE tb SET bikou = '特記なし';

ALTER TABLE tb ADD bikou VARCHAR(100);

SELECT *, AVG(uria) AS avg FROM tb WHERE uria >= 50 
GROUP BY bang HAVING avg >= 120 ORDER BY avg DESC;

SELECT bang, AVG(uria) FROM tb GROUP BY bang ORDER BY AVG(uria) DESC;

SELECT bang, AVG(uria) FROM tb WHERE uria >= 50 GROUP BY bang;

SELECT bang, SUM(uria) FROM tb GROUP BY bang HAVING SUM(uria) >= 200;

SELECT CONCAT('合計は', SUM(uria), '円です') AS 売上 FROM tb;

SELECT CONCAT(bang, name, 'さん') FROM tb1;

SELECT SUM(uria) AS 売上 FROM tb;

SELECT bang, AVG(uria) FROM tb 
WHERE uria >= 50 GROUP BY bang ORDER BY AVG(uria) DESC;

SELECT bang, AVG(uria) FROM tb GROUP BY bang ORDER BY AVG(uria) DESC:

SELECT bang, AVG(uria) FROM tb WHERE uria >= 50 GROUP BY bang;

SELECT bang, SUM(uria) FROM tb GROUP BY bang HAVING SUM(uria) >= 200;

SELECT bang, AVG(uria) FROM tb GROUP BY bang;

SELECT bang, SUM(uria) AS 合計 FROM tb GRO UP BY bang;

SELECT bang, COUNT(*) AS 件数 FROM tb GROUP BY bang;

SELECT COUNT(*) FROM tb GROUP BY bang;

SELECT uria FROM tb ORDER BY uria DESC LIMIT 2 OFFSET 3;

SELECT uria FROM tb ORDER BY uria DESC LIMIT 5;

SELECT uria FROM tb ORDER BY uria ASC;

SELECT bang, uria,
CASE
    WHEN uria >= 100 THEN '多い'
    WHEN uria >= 50 THEN '中くらい'
    ELSE '少ない'
END AS 評価
FROM tb;

SELECT * FROM tb WHERE (uria >= 200 or bang LIKE '%1') AND tuki = 4;

SELECT * FROM tb WHERE bang LIKE '%1' AND tuki = 4 or uria >= 200;

SELECT * FROM tb WHERE uria < 50 OR uria > 200;

SELECT * FROM tb WHERE bang LIKE '%1' AND tuki = 4;

SELECT * FROM tb WHERE uria >= 50 AND uria <= 100;

SELECT DISTINCT bang FROM tb;

SELECT * FROM tb1J WHERE tosi IS NULL;

INSERT INTO tb1J (nama) VALUES('氏名のみ');

SELECT * FROM tb1 WHERE nama NOT LIKE '佐%';

SELECT * FROM tb1 WHERE nama LIKE '%川%';

SELECT * FROM tb WHERE bang LIKE '%1';

SELECT * FROM tb WHERE bang LIKE 'A101';

SELECT * FROM tb WHERE bang = 'A101';

SELECT * FROM tb WHERE tuki IN (5, 6);

SELECT * FROM tb WHERE uria NOT BETWEEN 50 AND 200;

SELECT * FROM tb WHERE uria BETWEEN 50 AND 100;

SELECT * FROM tb WHERE tuki<>4;

SELECT * FROM tb WHERE uria >= 100;

SELECT * FROM tb LIMIT 3;

INSERT INTO ima (b) VALUES (NOW());

CREATE TABLE ima (a INT AUTO_INCREMENT PRIMARY KEY, b DATETIME);

SELECT REVERSE(nama) FROM tb1;

SELECT REPEAT('.', tosi) FROM tb1;

SELECT SUBSTRING(bang, 2, 3) FROM tb1;

SELECT LEFT(bang, 2) FROM tb1;

SELECT RIGHT(bang, 2) FROM tb1;

SELECT CONCAT(bang,nama,'さん') FROM tb1;

SELECT USER();

SELECT DATABASE();

SELECT VERSION();

SELECT PI();

SELECT COUNT(uria) FROM tb;

SELECT SUM(uria) FROM tb;

SELECT AVG(uria) FROM tb;

SELECT uria*10000 as 売上 FROM tb;

SELECT bang AS 社員番号, uria AS 売上 FROM tb;

SELECT uria, bang, uria, bang FROM tb;

SELECT uria, bang FROM tb;

INSERT INTO nadake (a) VALUES SELECT nama FROM tb1;

CREATE TABLE nadake(
a VARCHAR(10)
);

DELETE FROM tb1H;

DROP TABLE IF EXISTS tb1A;

DROP TABLE tb1A;

INSERT INTO tb1I SELECT bang FROM tb1;

INSERT INTO tb1I SELECT * FROM tb1;

CREATE TABLE tb1I LIKE tb1;

CREATE TABLE 1b1H SELECT * FROM tb1;

CREATE TABLE syokiti_renzoku(
bang INT AUTO_INCREMENT PRIMARY KEY AUTO_INCREMENT=100,
niti DATETIME
);

DROP INDEX my_ind ON tb1G;

SHOW INDEX FROM tb1G \G

CREATE INDEX my_ind ON tb1G (bang);

ALTER TABLE tb1G MODIFY nama VARCHAR(10) DEFAULT '氏名未入力';

ALTER TABLE renzoku AUTO_INCREMENT=0;

CREATE TABLE renzoku (a INT AUTO_INCREMENT PRIMARY KEY, b VARCHAR(10));

CREATE TABLE uniq(a INT UNIQUE, b VARCHAR(10));

CREATE TABLE itii(a INT PRIMARY KEY, b VARCHAR(10));

ALTER TABLE tb1C DROP seinen;

ALTER TABLE tb1C CHANGE umare seinen DATE;

ALTER TABLE tb1C MODIFY umare DATETIME FIRST;

ALTER TABLE tb1E ADD umare DATETIME AFTER bang;

ALTER TABLE tb1D ADD umare DATETIME FIRST;

INSERT INTO tb1C VALUES ('N111', '松田', 33, '1980-11-10');

ALTER TABLE tb1C ADD umare DATETIME;

ALTER TABLE tb1C MODIFY nama VARCHA(100);

prompt \d:\h>

INSERT INTO hizu_ziko VALUES ('2013-11-17 20:35:15');

CREATE TABLE hizu_ziko (hizu DATETIME);

CREATE TABLE hizuke (a DATE);

CREATE TABLE tb1A SELECT * FROM Stb1;

SELECT 'test';

SELECT * FROM tb1;

INSERT INTO tb1 (bang, nama, tosi) VALUES ('A105', '西沢', 35 );

INSERT INTO tb1 (tosi, nama, bang) VALUES (23, '渡辺', 'A104');

INSERT INTO tb1 VALUES('A101', '佐藤', 40);

CREATE TABLE tb1(
bang VARCHAR(10),
nama VARCHAR(10),
tosi INT
);

CREATE DATABASE db1;
